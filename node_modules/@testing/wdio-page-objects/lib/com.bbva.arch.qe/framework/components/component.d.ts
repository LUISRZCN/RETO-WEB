/**
 * Page Objects represent a page or view in an application and they should be loaded from Step
 * Classes only via **[pageProvider](./PageProvider.md)** api.
 *
 *   ```ts
 *     import { PageObject, PageContext } from "@testing/wdio-page-objects";
 *
 *     @PageContext({
 *         wrapper: `#example`
 *     })
 *     export class ExamplePage extends PageObject {
 *     }
 *   ```
 * PageObjects are created through Classes that extend one of the superClasses listed below:
 *
 * -----------------------
 *
 * @module ComponentObjects
 */
import { ContainerObject } from '../containers/container';
/**
 * The present Class contains the base functionality that's inherited by all the others page
 * objects-type Classes, like [PageObjects](../pages/PageObject.md) or
 * [ComponentObjects](../components/ComponentObject.md).
 *
 * When extended directly in order to create the representation of a simple container,
 * the container's metadata must be provided via **[ContainerContext](ContainerContext.md)**
 * decorator.
 *
 *  ```typescript
 *    @ComponentContext({
 *        wrapper: 'text-container'
 *    })
 *    export class TextContainer extends ComponentObject {
 *    }
 *  ```
 *
 * -----------------------
 *
 */
export declare class ComponentObject extends ContainerObject {
}
//# sourceMappingURL=component.d.ts.map