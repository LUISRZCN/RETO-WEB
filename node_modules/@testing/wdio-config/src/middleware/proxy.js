const { isZscaler } = require('./zscaler');

async function setupProxy() {
    const proxyHost = await findProxy();

    if (!!proxyHost) {
        require('global-agent/bootstrap');
        global.GLOBAL_AGENT.HTTP_PROXY = proxyHost;
        global.GLOBAL_AGENT.HTTPS_PROXY = proxyHost;
        global.GLOBAL_AGENT.NO_PROXY = getNoProxy();
    }
}

async function findProxy() {
    const proxyHost = getProxy();

    if (!proxyHost) {
        const zcalerProxy = await isZscaler();
        return zcalerProxy;
    }

    return proxyHost;
}

function getProxy() {
    const {
        HTTP_PROXY,
        HTTPS_PROXY,
        http_proxy,
        https_proxy,
        npm_config_proxy
    } = process.env;

    return HTTPS_PROXY || https_proxy || HTTP_PROXY || http_proxy || npm_config_proxy;
}

function getNoProxy() {
    const {
        NO_PROXY,
        no_proxy,
    } = process.env;

    return NO_PROXY || no_proxy || '127.0.0.1,localhost';
}

module.exports = { findProxy, setupProxy }