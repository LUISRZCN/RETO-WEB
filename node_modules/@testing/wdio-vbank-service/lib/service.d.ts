import { getVBankWorkspacePath } from './utils/cucumber';
import { VBankConfig } from "./launcher";
/** @internal */
export declare class VBankService {
    config: VBankConfig;
    isServiceEnabled: boolean;
    currentSessionId: string;
    workspacePath: string;
    isRecoding: boolean;
    isEnabledByDefault: boolean;
    isParallelizationEnabled: boolean;
    vbankAdminUri: string;
    vbankHost: string;
    getVBankWorkspacePath: typeof getVBankWorkspacePath;
    constructor(pluginConfig: {
        vbank?: VBankConfig;
    }, _capabilities: any, browserConfig: {
        vbank?: VBankConfig;
    });
    /**
     * Cucumber specific hooks
     */
    beforeFeature(_uri: any): void;
    beforeScenario(uri: any, feature: any, scenario: any): Promise<void>;
    afterScenario(): Promise<void>;
    update(scenario: any, feature: any): Promise<void>;
    teardown(): Promise<void>;
    startSession(workspacePath: any, record: any): Promise<string>;
    endSession(workspacePath: any, sessionId: any): Promise<any>;
    updateWorkspace(workspacePath: any, record?: boolean): Promise<any>;
    getSessionEndpoint(workspacePath: any, sessionId?: any): string;
    endpoint(): string;
    mode(): "record" | "replay";
}
//# sourceMappingURL=service.d.ts.map