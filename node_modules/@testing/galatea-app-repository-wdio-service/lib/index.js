const util = require('util');
const fs = require('fs');
const path = require("path");
const request = require("request");

const exists = util.promisify(fs.exists);

async function upload(fileName, uri) {
    console.log(`Uploading ${fileName} to galatea`);
    const body = fs.createReadStream(fileName);
    const options = {
      uri,
      body,
      headers: {
          'Content-Type': 'application/octet-stream'
      }
    };
    return new Promise((end, fail) => request.put(options, (error, response, body) => {
        console.log('File upload status code: ' + response.statusCode);
        return error ? fail(error) :end(JSON.parse(body).id);
    }));
}


module.exports = class WdioGalateaAPPRepository {

    async onPrepare(config, capabilities) {
        const caps = Array.isArray(capabilities) ? capabilities : Object.values(capabilities);
        await Promise.all(caps.map(async capability => {
            try {
                const fileName = capability.app || capability['appium:app'];
                if ((fileName && await exists(fileName))) {
                    const context = (config.path && config.path.indexOf('/galatea') === 0) ? '/galatea' : '';
                    const target = `${config.protocol || 'https'}://${config.user}:${config.key}@${config.hostname}${context}/api/v0/apps/${path.basename(fileName)}`;
                    const appId = await upload(fileName, target);
                    if (capability.app) {
                        capability.app = `galateapp://${appId}`;
                    } else {
                        capability['appium:app'] = `galateapp://${appId}`;
                    }
                } else if (fileName) {
                    console.log(`${fileName} doesn't seem to be a valid file. Will keep on with that value instead of uploading to Galatea'`);
                }
            } catch(error) {
                console.log(error);
                throw error;
            }
        }));
    }

}