"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.ShadowDomService = exports.browserEvents = exports.TestEvents = void 0;
var commands_1 = require("./commands");
var mobileContext_1 = require("./mobileContext");
var privateTexts_1 = require("./privateTexts");
var apple_fix_1 = require("./apple-fix");
var safe_1 = require("./safe");
var iframes_1 = require("./iframes");
var testability_1 = require("./testability");
var selectors_1 = require("./selectors");
__createBinding(exports, selectors_1, "getElementsMatching");
var iframes_2 = require("./iframes");
__createBinding(exports, iframes_2, "checkIntoPage");
var base_1 = require("@testing/base");
var events_1 = require("events");
var attach = require("webdriverio").attach;
var runFnInFiberContext = require('@wdio/sync').runFnInFiberContext;
var TestEvents;
(function (TestEvents) {
    TestEvents["TestStart"] = "TestStart";
    TestEvents["TestEnd"] = "TestEnd";
    TestEvents["SuiteStart"] = "SuiteStart";
    TestEvents["SuiteEnd"] = "SuiteEnd";
    TestEvents["StepStart"] = "StepStart";
    TestEvents["StepEnd"] = "StepEnd";
})(TestEvents = exports.TestEvents || (exports.TestEvents = {}));
exports.browserEvents = global.browserEvents = global.browserEvents || new events_1.EventEmitter();
var ShadowDomService = /** @class */ (function () {
    function ShadowDomService() {
    }
    ShadowDomService.prototype.before = function () {
        this.initBrowser();
    };
    /**
     * Use this method if you have and adhoc runner (!= wdio) and you
     * want to use Acis capabilities.
     * @param browser Initializes an Acis browser
     */
    ShadowDomService.prototype.initBrowser = function (browser, options) {
        if (browser === void 0) { browser = global.browser; }
        if (options === void 0) { options = {}; }
        var ownBrowser = options.createOwnBrowser;
        if (browser.config && browser.config.acisOpts) {
            ownBrowser = browser.config.acisOpts.createOwnBrowser;
        }
        var acisBrowser = (ownBrowser ? this.createOwnBrowser(browser) : browser);
        acisBrowser.events = exports.browserEvents;
        this.acisBrowser = acisBrowser;
        commands_1.init(acisBrowser);
        mobileContext_1.init(acisBrowser);
        privateTexts_1.init(acisBrowser);
        apple_fix_1.init(acisBrowser);
        safe_1.init(acisBrowser);
        iframes_1.init(acisBrowser);
        testability_1.init(acisBrowser);
    };
    ShadowDomService.prototype.createOwnBrowser = function (browser) {
        var acisBrowser = attach({
            sessionId: browser.sessionId,
            capabilities: browser.capabilities,
            isW3C: browser.isW3C,
            isIOS: browser.isIOS,
            isAndroid: browser.isAndroid,
            isChrome: browser.isChrome,
            isMobile: browser.isMobile
        });
        var origAddCommand = acisBrowser.addCommand.bind(acisBrowser);
        acisBrowser.addCommand = function (name, fn, attachToElement) { return (origAddCommand(name, runFnInFiberContext(fn), attachToElement)); };
        var origOverwriteCommand = acisBrowser.overwriteCommand.bind(acisBrowser);
        acisBrowser.overwriteCommand = function (name, fn, attachToElement) { return (origOverwriteCommand(name, runFnInFiberContext(fn), attachToElement)); };
        acisBrowser.config = __assign({}, browser.config);
        Object.keys(browser.options).forEach(function (opt) { return acisBrowser.options[opt] = browser.options[opt]; });
        acisBrowser.acis = true;
        base_1.patchedContextHelper.registerPatch(function () {
            global.browser = acisBrowser;
            global.$ = acisBrowser.$.bind(acisBrowser);
            global.$$ = acisBrowser.$$.bind(acisBrowser);
            return function () {
                global.browser = browser;
                global.$ = browser.$.bind(browser);
                global.$$ = browser.$$.bind(browser);
            };
        });
        browser.overwriteCommand('reloadSession', function (orig) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var sessionId;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, orig.apply(void 0, args)];
                        case 1:
                            sessionId = _a.sent();
                            acisBrowser.sessionId = sessionId;
                            return [2 /*return*/, sessionId];
                    }
                });
            });
        });
        acisBrowser.overwriteCommand('url', function (_prev) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, browser.url.apply(browser, args)];
                        case 1:
                            result = _a.sent();
                            if (acisBrowser.resetVBank) {
                                acisBrowser.resetVBank();
                            }
                            return [2 /*return*/, result];
                    }
                });
            });
        });
        return acisBrowser;
    };
    ShadowDomService.prototype.reset = function () {
        safe_1.reset();
        iframes_1.reset();
    };
    ShadowDomService.prototype.beforeTest = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.reset();
        (_a = this.acisBrowser.events).emit.apply(_a, __spreadArrays([TestEvents.TestStart], args));
    };
    ShadowDomService.prototype.afterTest = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.acisBrowser.events).emit.apply(_a, __spreadArrays([TestEvents.TestEnd], args));
    };
    ShadowDomService.prototype.beforeScenario = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.beforeTest.apply(this, args);
    };
    ShadowDomService.prototype.afterScenario = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.afterTest.apply(this, args);
    };
    ShadowDomService.prototype.beforeSuite = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.acisBrowser.events).emit.apply(_a, __spreadArrays([TestEvents.SuiteStart], args));
    };
    ShadowDomService.prototype.afterSuite = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.acisBrowser.events).emit.apply(_a, __spreadArrays([TestEvents.SuiteEnd], args));
    };
    ShadowDomService.prototype.beforeFeature = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.beforeSuite.apply(this, args);
    };
    ShadowDomService.prototype.afterFeature = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.afterSuite.apply(this, args);
    };
    ShadowDomService.prototype.beforeStep = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.acisBrowser.events).emit.apply(_a, __spreadArrays([TestEvents.StepStart], args));
    };
    ShadowDomService.prototype.afterStep = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.acisBrowser.events).emit.apply(_a, __spreadArrays([TestEvents.StepEnd], args));
    };
    return ShadowDomService;
}());
exports.ShadowDomService = ShadowDomService;
var commands_2 = require("./commands");
__createBinding(exports, commands_2, "deep");
//# sourceMappingURL=index.js.map