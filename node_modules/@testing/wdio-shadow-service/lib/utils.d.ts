export declare const ELEMENT_KEY = "element-6066-11e4-a52e-4f735466cecf";
import { AcisBrowser } from ".";
export declare type SelectorParseResult = {
    using: SelectorType;
    value: string;
};
export declare enum SelectorType {
    unknown = "unknown",
    id = "id",
    css = "css selector",
    deep = "deep css selector",
    xpath = "xpath",
    link = "link text",
    partialLink = "partial link text",
    name = "name",
    tagName = "tag name",
    className = "class name",
    androidUiAutomator = "-android uiautomator",
    androidDataMatcher = "-android datamatcher",
    iosUiAutomation = "-ios uiautomation",
    iosPredicateString = "-ios predicate string",
    iosClassChain = "-ios class chain",
    accessibilityId = "accessibility id"
}
export declare function browserWrapper<T extends Function>(f: T): T;
export declare function cleanElement(element: WebdriverIO.Element): {
    "element-6066-11e4-a52e-4f735466cecf": string;
    ELEMENT: string;
};
export declare function elementOutputMapper(selector: any, element: any, parent: WebdriverIO.Element): any;
export declare function elementsOutputMapper(selector: any, elements: any[], parent: WebdriverIO.Element): any[];
export declare function parseSelector(selector: string): SelectorParseResult;
export interface ShadowAcisConfig {
    /**
     * Use deep selectors by default. Default value is true
     */
    deepSelectorsByDefault?: boolean;
}
export declare function getAcisOpts(browser: AcisBrowser): ShadowAcisConfig;
//# sourceMappingURL=utils.d.ts.map