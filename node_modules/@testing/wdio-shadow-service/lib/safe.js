"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.init = exports.reset = void 0;
var apple_fix_1 = require("./apple-fix");
var firefox_fix_1 = require("./firefox-fix");
var defaultSafeModeOptions = {
    retries: 1,
    notAnimating: true,
    scrollIntoView: true,
    waitForApplicationToCompleteTasks: true,
    applyCompatibilityPatches: true
};
var safeModeOptions = defaultSafeModeOptions;
function reset() {
    safeModeOptions = defaultSafeModeOptions;
}
exports.reset = reset;
function init(browser) {
    var config = browser.config;
    var defaults = (config && config.acisOpts && config.acisOpts.safeMode) || {};
    defaultSafeModeOptions = __assign(__assign({}, defaultSafeModeOptions), defaults);
    function isIE() {
        return browser.capabilities.browserName !== 'internet explorer';
    }
    var patches = [
        apple_fix_1.patches(browser),
        firefox_fix_1.patches(browser),
    ];
    [
        "click",
        "addValue",
        "touchAction",
        "clearValue",
        "doubleClick",
        "selectByAttribute",
        "selectByIndex",
        "selectByVisibleText",
        "dragAndDrop",
        "getText"
    ].forEach(function (command) {
        var _a;
        var fn = (_a = {}, _a[command] = function (old) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            if (browser.isWebApplication() && safeModeOptions.waitForApplicationToCompleteTasks) {
                browser.waitForApplicationToCompleteTasks();
            }
            if ((browser.isWebApplication() && isIE()) || (!browser.isWebApplication() && browser.getContext() !== 'NATIVE_APP')) {
                if (!safeModeOptions.retries) {
                    safeModeOptions.scrollIntoView && this.scrollIntoView();
                }
                safeModeOptions.notAnimating && this.waitForActionable();
            }
            var retries = safeModeOptions.retries || 0;
            var _loop_1 = function (attempt) {
                try {
                    var patch = patches.filter(function (p) { return p.check(); }).map(function (p) { return p[command]; }).pop();
                    return { value: ((safeModeOptions.applyCompatibilityPatches && patch) ? patch.bind(this_1, old) : old).apply(void 0, args) };
                }
                catch (e) {
                    if (attempt > 0) {
                        browser.call(function () { return new Promise(function (res) { return setTimeout(res, 500 * (retries - attempt)); }); });
                        if ((browser.isWebApplication() && isIE()) || (!browser.isWebApplication() && browser.getContext() !== 'NATIVE_APP')) {
                            safeModeOptions.scrollIntoView && this_1.scrollIntoView();
                        }
                    }
                    else {
                        throw e;
                    }
                }
            };
            var this_1 = this;
            for (var attempt = retries; attempt >= 0; attempt--) {
                var state_1 = _loop_1(attempt);
                if (typeof state_1 === "object")
                    return state_1.value;
            }
        }, _a)[command];
        browser.overwriteCommand(command, fn, true);
    });
    browser.addCommand("highlightLocation", function highlightLocation(_a) {
        var x = _a.x, y = _a.y, _b = _a.time, time = _b === void 0 ? 2000 : _b;
        browser.execute(function (x, y, time) {
            var elem = document.createElement("div");
            elem.style.position = "absolute";
            elem.style.left = (x - 5) + 'px';
            elem.style.top = (y - 5) + 'px';
            elem.style.backgroundColor = 'red';
            elem.style.width = '10px';
            elem.style.height = '10px';
            elem.style.display = 'block';
            elem.style.zIndex = '10000';
            elem.style.pointerEvents = 'none';
            document.getElementsByTagName('body')[0].appendChild(elem);
            setTimeout(function () {
                try {
                    elem.remove();
                }
                catch (e) { }
            }, time);
        }, x, y, time);
    });
    browser.addCommand("safeMode", function safeMode(options) {
        if (options) {
            safeModeOptions = Object.assign({}, safeModeOptions, options);
        }
        return safeModeOptions;
    });
    browser.addCommand("isActionable", function isActionable(_a) {
        var _b = (_a === void 0 ? {} : _a).notAnimating, notAnimating = _b === void 0 ? true : _b;
        if (!isIE() && !this.isClickable()) {
            return false;
        }
        //TODO: Doesn't work correctly in iOS
        if (notAnimating && (browser.isWebApplication || browser.getContext() !== 'NATIVE_APP') && !browser.isIOS) {
            return browser.executeAsync(function (elem, done) {
                var prev = elem.getBoundingClientRect();
                setTimeout(function () {
                    var current = elem.getBoundingClientRect();
                    done(prev.left === current.left &&
                        prev.right === current.right &&
                        prev.top === current.top &&
                        prev.bottom === current.bottom);
                }, 150);
            }, this);
        }
        // TODO: What if it's on NATIVE_APP context?
        return true;
    }, true);
    browser.addCommand("waitForActionable", function (_a) {
        var _this = this;
        var _b = _a === void 0 ? {} : _a, _c = _b.timeout, timeout = _c === void 0 ? browser.options.waitforTimeout : _c, _d = _b.interval, interval = _d === void 0 ? browser.options.waitforInterval : _d, _e = _b.reverse, reverse = _e === void 0 ? false : _e, _f = _b.timeoutMsg, timeoutMsg = _f === void 0 ? "element (\"" + this.selector + "\") still " + (reverse ? '' : 'not ') + "actionable after " + timeout + "ms" : _f;
        return browser.waitUntil(function () { return reverse !== _this.isActionable(); }, { timeout: 10000, timeoutMsg: timeoutMsg, interval: interval });
    }, true);
}
exports.init = init;
//# sourceMappingURL=safe.js.map