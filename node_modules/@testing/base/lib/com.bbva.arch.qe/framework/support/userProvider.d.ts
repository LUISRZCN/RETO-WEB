import { DataManagerConfig } from 'data-manager-js-client';
/**
 * It allows us to retrieve the users that have been requested previously to
 * [DataManager](https://globaldevtools.bbva.com/bitbucket/projects/BGT/repos/data-manager-js-client/browse).
 */
export declare abstract class Users {
    /**
     * It returns data corresponding to an user previously retrieved from DataManager so it can be
     * used during a test case.
     *
     * --
     *
     * @param alias An optional string to identify an user, useful when more than one user's
     *   entries are needed for a test
     */
    abstract get(alias?: string): any;
}
/**
 * Class which exposes an interface to interact with [DataManager](https://globaldevtools.bbva.com/data-manager),
 * a tool which allows us to store users' data classified according to specific requirements defined by tags.
 *
 * Those tags later help us retrieve users with the role that fulfills the necessary requirements to access
 * specific application flows we need to test.
 */
export declare class UserProvider {
    private dm;
    private _users;
    /**
     * It allows us to interact with the users requested previously to
     * [DataManager](https://globaldevtools.bbva.com/bitbucket/projects/BGT/repos/data-manager-js-client/browse).
     *
     * --
     */
    get users(): Users;
    /**
     * It creates an instance of the api that enables us to interact with
     * [DataManager](https://globaldevtools.bbva.com/data-manager).
     *
     * In order to get authenticated with Datamanager and access your team's profile successfully,
     * it's possible to pass-in a *DataManagerConfig* object setting with the necessary data â€“you can do
     * this with environment variables too. For more info, you can check the
     * **[DataManagerJsClient documentation](https://globaldevtools.bbva.com/bitbucket/projects/BGT/repos/data-manager-js-client/browse)**.
     *
     * --
     *
     * @param config
     */
    constructor(config: DataManagerConfig);
    /**
     * When no alias passed in, it clears all the users that have been previously requested to be
     * used during a test case; when alias is passed in, it clears the user's data stored under
     * such alias.
     *
     * --
     *
     * @param alias An optional string to identify an user, useful when more than one users' entries
     *  are needed for a test
     */
    clear(alias?: string): Promise<void>;
    /**
     * It searchs for an user in [DataManager](https://globaldevtools.bbva.com/data-manager)
     * matching the requirements defined by the tags passed in.
     *
     * --
     *
     * @param tags A comma separated list of tags to find an user in DataManager matching the
     *   requirements defined by those tags
     * @param alias An optional string to identify an user, useful when more than one users' entries
     *   are needed for a test
     * @param exclusiveLock  Truthy if the data should only be available for this test during its
     *   execution
     */
    addUserByTags(tags: string, alias?: string, exclusiveLock?: boolean): Promise<void>;
}
//# sourceMappingURL=userProvider.d.ts.map