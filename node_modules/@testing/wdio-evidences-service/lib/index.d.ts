/// <reference types="node" />
/// <reference types="@wdio/sync/webdriverio-core" />
/// <reference types="@wdio/sync" />
/// <reference types="webdriver" />
declare const _default: {
    new (): {
        originalStreams: {
            stdout: {
                (buffer: string | Buffer, cb?: Function): boolean;
                (str: string, encoding?: string, cb?: Function): boolean;
            };
            stderr: {
                (buffer: string | Buffer, cb?: Function): boolean;
                (str: string, encoding?: string, cb?: Function): boolean;
            };
        };
        output: {
            stdout: string;
            stderr: string;
        };
        count: number;
        onPrepare(_config: WebdriverIO.Config, capabilities: {
            [key: string]: WebDriver.DesiredCapabilities;
        } | WebDriver.DesiredCapabilities[]): void;
        afterScenario(_uri: any, _feature: any, _scenario: any, result: any, _sourceLocation: any): void;
        afterTest(_test: any, _context: any, { error, _result, _duration, _passed, _retries }: {
            error: any;
            _result: any;
            _duration: any;
            _passed: any;
            _retries: any;
        }): void;
        beforeTest(): void;
        beforeScenario(uri: any, { document: { feature } }: {
            document: {
                feature: any;
            };
        }, scenario: any, sourceLocation: any): void;
        captureInfo(): void;
        captureSteams(): void;
        stopStreams(): void;
    };
};
export = _default;
//# sourceMappingURL=index.d.ts.map